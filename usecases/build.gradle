apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'android-apt'
apply plugin: 'maven'
apply plugin: 'realm-android'

apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

apply plugin: "net.ltgt.errorprone"

version = "1.0.1"
group = "com.github.zeyad-37"

ext {
    bintrayRepo = 'maven'
    bintrayName = 'usecases'

    publishedGroupId = 'com.github.zeyad-37'
    libraryName = 'UseCases'
    artifact = 'usecases'

    libraryDescription = 'Is a library that is a generic implementation of the Domain and Data layers in a clean architecture.'

    siteUrl = 'https://github.com/Zeyad-37/UseCases'
    gitUrl = 'https://github.com/Zeyad-37/UseCases.git'

    libraryVersion = version

    developerId = 'zeyad-37'
    developerName = 'Zeyad Gasser'
    developerEmail = 'zeyad.gasser@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath 'me.tatarka:gradle-retrolambda:3.6.1'
        classpath "net.ltgt.gradle:gradle-errorprone-plugin:0.0.10"
    }
}

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'
    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
//        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            debuggable true
//            consumerProguardFiles 'proguard-project.txt'
        }
        release {
//            consumerProguardFiles 'proguard-project.txt'
        }
    }

    lintOptions {
        //lint rules of conduct
        warningsAsErrors true
        abortOnError true
        htmlReport true
        //locations for the rules and output
        lintConfig file("${rootDir}/config/lint/lint-config.xml")
        htmlOutput file("${buildDir}/reports/lint/lint.html")
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.all {
            // All the usual Gradle options.
            jvmArgs '-XX:MaxPermSize=256m'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        incremental false
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/rxjava.properties'
    }
}

ext {
    supportLibraryVersion = '27.0.1'
    retrofitVersion = '2.2.0'
    okhttpVersion = '3.7.0'
    androidSupportTest = '0.5'
    espressoCore = '2.2.2'
    powerMock = '1.6.6'
    robolectric = '3.3.2'
    room_version = '1.1.1'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //Job Dispatcher
    implementation 'com.firebase:firebase-jobdispatcher-with-gcm-dep:0.6.0'
    // Network
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"
    implementation "com.android.support:support-annotations:$supportLibraryVersion"

    implementation "android.arch.persistence.room:runtime:$room_version"
    annotationProcessor "android.arch.persistence.room:compiler:$room_version"
    implementation "android.arch.persistence.room:rxjava2:$room_version"

    // Rx
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex:rxjava:1.3.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.0'
    // Cache
    implementation 'com.github.zeyad-37:storo:2.0.1'
    // Testing
    testImplementation 'junit:junit:4.12'
    testImplementation "com.android.support:support-annotations:$supportLibraryVersion"
    testImplementation "com.android.support.test.espresso:espresso-core:$espressoCore"
//    testImplementation "org.mockito:mockito-core:2.0.57-beta"
    testImplementation "org.mockito:mockito-core:1.10.19"
    testImplementation "org.robolectric:robolectric:$robolectric"
    testImplementation "org.robolectric:shadows-support-v4:$robolectric"
}

task createPom {
    apply plugin: 'maven'
    description "Generates pom.xml"
    pom {
        project {
            groupId group
            artifactId 'usecases'
            version version
            packaging 'aar'
        }
    }.withXml {
        def dependenciesNode = asNode().appendNode('dependencies')

        configurations.implementation.allDependencies.each { dependency ->
            def dependencyNode = dependenciesNode.appendNode('dependency')
            dependencyNode.appendNode('groupId', dependency.group)
            dependencyNode.appendNode('artifactId', dependency.name)
            dependencyNode.appendNode('version', dependency.version)
        }
    }.writeTo("$buildDir/pom.xml")
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

bintray {
    user = 'zeyad-37'
    key = '24dde90ae6153839f9a6053e9154d03619db2e63'

    configurations = ['archives']

    pkg {
        repo = "maven"
        name = 'usecases'

//        websiteUrl = siteUrl
//        vcsUrl = gitUrl
        websiteUrl = 'https://github.com/Zeyad-37/UseCases'
        vcsUrl = 'https://github.com/Zeyad-37/UseCases.git'

        licenses = ["Apache-2.0"]
        publish = true
        version {
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = 'ziado123' //Optional. The passphrase for GPG signing'
            }
        }
    }
}

apply from: "$project.rootDir/tools/script-git-version.gradle"
apply from: "$project.rootDir/tools/script-findbugs.gradle"
apply from: "$project.rootDir/tools/script-pmd.gradle"
apply from: "$project.rootDir/tools/script-java-code-coverage.gradle"
apply from: "$project.rootDir/tools/script-infer.gradle"
apply from: "$project.rootDir/tools/script-check-style.gradle"

//apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/installv1.gradle'
//apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle'