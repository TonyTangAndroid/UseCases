apply plugin: 'com.android.library'
//apply plugin: 'me.tatarka.retrolambda'
//apply plugin: 'android-apt' // remove
apply plugin: 'maven'
apply plugin: 'realm-android'

apply plugin: 'com.github.dcendents.android-maven'

//apply plugin: "net.ltgt.errorprone"

version = "1.0.1"
group = "com.github.zeyad-37"

//buildscript {
//    repositories {
//        maven {
//            url "https://plugins.gradle.org/m2/"
//        }
//    }
//
//    dependencies {
////        classpath 'me.tatarka:gradle-retrolambda:3.7.0'
////        classpath "net.ltgt.gradle:gradle-errorprone-plugin:0.0.13"
//    }
//}
//
//repositories {
//    mavenCentral()
//}

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'
    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "com.zeyad.usecases.integration.AndroidRobolectricRunner"
    }

    buildTypes {
        debug {
            debuggable true
//            consumerProguardFiles 'proguard-project.txt'
        }
        release {
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        //lint rules of conduct
        warningsAsErrors true
        abortOnError false
        htmlReport true
        //locations for the rules and output
        lintConfig file("$project.rootDir/tools/rules-lint.xml")
        htmlOutput file("${buildDir}/reports/lint/lint.html")
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
        unitTests.all {
            // All the usual Gradle options.
            jvmArgs '-XX:MaxPermSize=256m'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        incremental false
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/rxjava.properties'
    }

    if (project.hasProperty('devBuild')) {
        splits.abi.enable = false
        splits.density.enable = false
        aaptOptions.cruncherEnabled = false
    }
    sourceSets {
        main {
            assets.srcDirs = ['src/main/assets', 'src/main/java/com/zeyad/usecases/assets', 'src/test/java/com/zeyad/usecases/assets']
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    //Job Dispatcher
    compile 'com.firebase:firebase-jobdispatcher:0.7.0'
    // Network
    compile "com.squareup.retrofit2:retrofit:$retrofit"
    compile "com.squareup.retrofit2:converter-gson:$retrofit"
    compile "com.squareup.retrofit2:adapter-rxjava2:$retrofit"
    compile "com.squareup.okhttp3:okhttp:$okhttpVersion"
    compile "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"
    compile "com.android.support:support-annotations:$supportLibrary"
    // Rx
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'io.reactivex.rxjava2:rxjava:2.1.7'
    testCompile 'io.reactivex:rxandroid:1.2.1'
    // Cache
    compile('com.github.Zeyad-37:Storo:2.1.0') {
        transitive = true
    }
    compile 'com.rollbar:rollbar-android:0.2.1'
    compile 'nl.littlerobots.rxlint:rxlint:1.6'
    // Testing
    testCompile 'junit:junit:4.12'
    testCompile "com.android.support:support-annotations:$supportLibrary"
    testCompile "org.mockito:mockito-core:$mockito"
    testCompile "org.robolectric:robolectric:$robolectric"
//    testCompile "org.robolectric:shadows-support-v4:$robolectric"

    testCompile "org.powermock:powermock-module-junit4:$powerMock"
    testCompile "org.powermock:powermock-module-junit4-rule:$powerMock"
    testCompile "org.powermock:powermock-api-mockito:$powerMock"
    testCompile "org.powermock:powermock-classloading-xstream:$powerMock"

//    testCompile "com.squareup.okhttp3:mockwebserver:$okhttpVersion"
    testCompile 'com.github.andrzejchm.RESTMock:android:0.2.2'
    //required to resolve robolectric test problems
    testCompile("com.jakewharton.espresso:okhttp3-idling-resource:$okhttpIdelingResource") {
        exclude group: 'com.android.support'
    }
}

//apply from: "$project.rootDir/tools/script-git-version.gradle"
apply from: "$project.rootDir/tools/script-findbugs.gradle"
//apply from: "$project.rootDir/tools/script-pmd.gradle"
//apply from: "$project.rootDir/tools/script-java-code-coverage.gradle"
//apply from: "$project.rootDir/tools/script-infer.gradle"
//apply from: "$project.rootDir/tools/script-check-style.gradle"
